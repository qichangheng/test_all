0 ， 什么是类和对象：
类：具备相同特征或者行为的一个群体：
对象： 个体

类：模型 （造对象）
对象： 模型生出来（造出来）具体的东西。



1. 实例属性和类属性的区别
实例可以获取 实例属性和类属性
类只能获取类属性。

类属性定义：类名下面或者类外面， 可以在其他的方法当中定义，但是不建议
class 类名：
    类属性1 = 属性值

    def __init__(self, name):
        self.name = name


类名.类属性other = 属性值。

实例属性： 类里面和类外面  __init__ 方法定义，或者  类名().实例属性


先天具备的属性，不管是类属性，实例属性，通常在类名下面， __init__ 直接定义好。

后天培养的属性，不管是类还是实例，都可以在 其他的方法当中定义， 类外面定义



类属性和实例属性：
类可以访问实例属性吗？？  Man.name ??  不可以
实例可以访问类属性？？ 可以
如果某一个属性名同时是类属性和实例属性。


如果在一个具体的场景当中，我不知道这个属性用类属性还是实例属性？？ 实例属性




2. 方法
实例方法， 实例具备的，类不一定具备。  类不能调用实例方法  self 获取实例
类方法， 类具备的，   实例可以获取 类方法可以直接通过 cls 获取类
静态方法：放在类里面的函数。 def static_methodo
类(对象).static_methodo


3. __init__   生孩子的过程，出厂设置。
不要写成 __int__

是对象的初始化过程。通常在里面定义实例属性。
实例属性的值通过参数传递进来。

参数必须要赋值给实例属性 self.shuxing = 参数
才能通过实例调用


4. self
类定义的里面表示 对象。

cls, 类里面表示 类

5, 继承， 继承时单边的。
6， 重写
7， super()

类和对象：多重继承。

